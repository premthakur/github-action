name: Streamlit CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Set up Docker Buildx (for cross-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Build the Docker image for your Streamlit app
      - name: Build Docker Image
        run: |
          docker build -t vikasy/streamlit-app:latest ./streamlit-cicd-demo/

      # Push the Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push vikasy/streamlit-app:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Configure kubectl
      - name: Configure kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.31.1'  # Replace with your desired kubectl version

      # Set Kubernetes Context for do-blr Cluster
      - name: Configure kubectl 
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KKUBECONFIG_DO_BLR }}" | base64 --decode > $HOME/.kube/config
          cat $HOME/.kube/config

      # Create Kubernetes Secrets for Docker Registry
      - name: Create Kubernetes Secrets for Docker Registry
        run: |
          kubectl create secret docker-registry myregistrykey \
            --docker-server=https://index.docker.io/v1/ \
            --docker-username=${{ secrets.DOCKER_USERNAME }} \
            --docker-password=${{ secrets.DOCKER_TOKEN }} \
            --docker-email=your-email@example.com

      # Install Helm
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.10.0'  # Replace with your desired Helm version

      # Install Helmfile
      - name: Install Helmfile
        run: |
          curl -LO https://github.com/helmfile/helmfile/releases/download/v0.144.0/helmfile_0.144.0_linux_amd64.tar.gz
          tar -zxvf helmfile_0.144.0_linux_amd64.tar.gz
          chmod +x helmfile
          sudo mv helmfile /usr/local/bin/helmfile

      # Deploy using Helmfile
      - name: Deploy using Helmfile
        run: |
          helmfile -f helmfile.yaml apply
